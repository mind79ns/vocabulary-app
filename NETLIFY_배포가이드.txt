🚀 Netlify 무료 배포 가이드 - AI 단어 암기장

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📋 준비사항
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ GitHub 계정 (무료)
✅ Netlify 계정 (무료)
✅ OpenAI API 키


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1단계: GitHub 저장소 생성 (아직 안 했다면)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. GitHub (https://github.com) 접속 및 로그인

2. 우측 상단 "+" → "New repository"

3. 저장소 정보:
   ┌─────────────────────────────────────┐
   │ Repository name: vocabulary-app     │
   │ Description: AI 단어 암기장         │
   │ Public 선택                          │
   └─────────────────────────────────────┘

4. "Create repository" 클릭


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2단계: GitHub에 코드 업로드
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

PowerShell 열고 실행:

cd "C:\Users\Mr Kim\Desktop\Vocabulary"

git add .
git commit -m "Netlify 배포 준비"

git remote add origin https://github.com/사용자명/vocabulary-app.git
git branch -M main
git push -u origin main

⚠️ 이미 remote가 있다면:
git remote set-url origin https://github.com/사용자명/vocabulary-app.git
git push -u origin main


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
3단계: Netlify 계정 생성
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Netlify (https://app.netlify.com) 접속

2. "Sign up" 클릭

3. 🎯 중요: "GitHub" 선택
   (이메일이 아닌 GitHub로 가입!)

4. GitHub 계정으로 로그인

5. Netlify가 GitHub 접근 권한 요청
   → "Authorize Netlify" 클릭


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
4단계: 프로젝트 배포
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Netlify 대시보드에서 "Add new site" 클릭

2. "Import an existing project" 선택

3. "Deploy with GitHub" 클릭

4. 저장소 목록에서 "vocabulary-app" 찾기
   (안 보이면 "Configure the Netlify app on GitHub" 클릭)

5. 저장소 선택 후 설정:
   ┌──────────────────────────────────────┐
   │ Branch to deploy: main               │
   │ Build command: (비워두기)            │
   │ Publish directory: public            │
   │ Functions directory: netlify/functions│
   └──────────────────────────────────────┘

6. "Show advanced" 클릭

7. "New variable" 클릭하여 환경변수 추가:
   ┌──────────────────────────────────────┐
   │ Key: OPENAI_API_KEY                  │
   │ Value: sk-proj-실제API키입력         │
   └──────────────────────────────────────┘

8. "Deploy vocabulary-app" 클릭 🚀


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
5단계: 배포 완료 및 접속
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. 배포 진행 (30초~1분)
   "Site deploy in progress" → "Published" ✅

2. 배포 완료 후 URL 확인
   예: https://vocabulary-app-xxx.netlify.app

3. URL 클릭하여 접속 테스트

4. ✨ 완료! 모든 기기에서 접속 가능!


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
✨ 완료! 이제 어디서든 사용 가능
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ PC, 스마트폰, 태블릿 모두 접속 가능
✅ 인터넷만 있으면 어디서든 사용
✅ 24시간 자동 운영
✅ HTTPS 보안 연결 자동 적용
✅ 무료!


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🔧 코드 수정 시 재배포
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

코드 수정 후:

cd "C:\Users\Mr Kim\Desktop\Vocabulary"
git add .
git commit -m "기능 업데이트"
git push

→ Netlify가 자동 재배포! (30초~1분)


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🎯 사용자 지정 도메인 (선택사항)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Netlify 프로젝트 → Domain settings
→ "Add custom domain" (무료)


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
❓ 문제 해결
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

❌ "Function invocation failed" 오류
   → Netlify 사이트 → Functions 탭 → 로그 확인
   → 환경변수 OPENAI_API_KEY 확인

❌ "404 Page Not Found"
   → netlify.toml 파일 확인
   → public/index.html 존재 확인

❌ "API 키 오류"
   → Netlify → Site settings → Environment variables
   → OPENAI_API_KEY 재확인

❌ GitHub 연결 안 됨
   → Netlify → Team settings → Connected accounts
   → GitHub 재연결


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📊 Netlify 무료 플랜 제한
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ 대역폭: 100GB/월
✅ Functions: 125,000 호출/월
✅ 빌드 시간: 300분/월
✅ 사이트: 무제한
✅ 도메인: 무제한

개인 단어장 용도로 충분합니다!


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
💡 Netlify vs Vercel
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Netlify 장점:
✅ 더 쉬운 설정
✅ GitHub 가입 간편
✅ 명확한 Functions 로그
✅ 드래그앤드롭 배포 가능

둘 다 무료이고 성능도 비슷합니다!
